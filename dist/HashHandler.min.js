/**
 * HashHandler v1.0.0 - Simple handler for URI hashes.
 * Copyright 2016 Lars Graubner - https://github.com/lgraubner/hash-handler
 * License: MIT
 */
!function(t,n){"object"==typeof module&&"object"==typeof module.exports?module.exports=n():"function"==typeof define&&define.amd?define([],n):t.HashHandler=n()}(this,function(){function t(t,n){var e;for(e=0;e<t.length;e++)n(t[e],e)}function n(t){return!!(t&&t.constructor&&t.call&&t.apply)}var e;return function(){"use strict";var s=function(){this.hash="",this.listeners=[],this.init()};return s.prototype.init=function(){this.hash=this._getHashFragment(),window.addEventListener("hashchange",this._sync.bind(this),!1)},s.prototype.get=function(){return this.hash},s.prototype.set=function(t){return this.hash=t,this._onHashChange(),this._setHashFragment(t),!0},s.prototype.clear=function(){return this.set("")},s.prototype.listen=function(){var t=arguments,e={};return n(t[0])?(e.regex=new RegExp(".*"),e.cb=t[0]):n(t[1])&&(e.regex=new RegExp("^"+t[0]+"$"),e.cb=t[1]),this.listeners.push(e),e},s.prototype.unlisten=function(t){var n=this.listeners.indexOf(t);return n>-1?(this.listeners.splice(n,1),!0):!1},s.prototype._getHashFragment=function(){return window.location.hash.replace(/^#?/,"")},s.prototype._setHashFragment=function(t){window.location.hash="#"+t},s.prototype._onHashChange=function(){var n=this.hash;t(this.listeners,function(t){(t.regex.test(n)||"default"===t.trigger)&&t.cb.call(window,n)})},s.prototype._sync=function(){var t=this._getHashFragment();this.hash!==t&&(this.hash=t,this._onHashChange())},{getInstance:function(){return e||(e=new s),e}}}()});