/**
 * HashHandler v1.5.0 - Simple handler for URI hashes.
 * Copyright 2017 Lars Graubner - https://github.com/lgraubner/hash-handler
 * License: MIT
 */
!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):t.HashHandler=e()}(this,function(){function t(t,e){var n;for(n=0;n<t.length;n++)e(t[n],n)}function e(t){return!!(t&&t.constructor&&t.call&&t.apply)}function n(t){var e,n={};try{e=t.split("&")}catch(o){e=[]}return e.length>0&&(n=e.reduce(function(t,e){var n=e.split("="),o=n[1];return o||(o=!0),t[n[0]]=o,t},{})),n}function o(t){var e,n=[];for(e in t)t.hasOwnProperty(e)&&n.push(encodeURIComponent(e)+"="+encodeURIComponent(t[e]));return n.join("&")}var r;return function(){"use strict";var s=function(){this.hash="",this.listeners=[],this.init()};return s.prototype.init=function(){this.hash=this._getHashFragment(),window.addEventListener("hashchange",this._sync.bind(this),!1)},s.prototype.get=function(t){var e=this.hash,o=n(e);return"boolean"==typeof t&&t?e=""!==this.hash?n(this.hash):{}:"string"==typeof t&&(e=o[t]),e},s.prototype.set=function(){var t=n(this.hash),e=arguments[0],r=e;if(arguments.length>1)t[e]=arguments[1],r=o(t);else if("object"==typeof e)r=o(e);else if("string"!=typeof e)throw new Error("set() expects either a string or object, "+typeof e+" given.");return this.hash=r,this._onHashChange(),this._setHashFragment(r),!0},s.prototype.clear=function(){return this.set("")},s.prototype.listen=function(){var t=arguments,n={};return e(t[0])?(n.regex=new RegExp(".*"),n.cb=t[0]):e(t[1])&&(n.regex=new RegExp("^"+t[0]+"$"),n.cb=t[1]),this.listeners.push(n),n},s.prototype.unlisten=function(t){var e=this.listeners.indexOf(t);return e>-1&&(this.listeners.splice(e,1),!0)},s.prototype._getHashFragment=function(){return decodeURI(window.location.hash.replace(/^#?/,""))},s.prototype._setHashFragment=function(t){window.location.hash="#"+encodeURI(t)},s.prototype._onHashChange=function(){var e=this.hash;t(this.listeners,function(t){(t.regex.test(e)||"default"===t.trigger)&&t.cb.call(window,e,n(e))})},s.prototype._sync=function(){var t=this._getHashFragment();this.hash!==t&&(this.hash=t,this._onHashChange())},{getInstance:function(){return r||(r=new s),r}}}()});