/**
 * HashHandler v0.1.0 - Simple handler for URI hashes.
 * Copyright 2015 Lars Graubner - https://github.com/lgraubner/hash-handler
 * License: MIT
 */
!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):t.HashHandler=e()}(this,function(){function t(t,e){var n;for(n=0;n<t.length;n++)e(t[n],n)}function e(t){return!!(t&&t.constructor&&t.call&&t.apply)}var n;return function(){"use strict";var s=function(){this.hash="",this.listeners=[],this.init()};return s.prototype.init=function(){this.hash=this._getHashFragment(),window.addEventListener("hashchange",this._sync.bind(this),!1)},s.prototype.get=function(){return this.hash},s.prototype.set=function(t){return this.hash=t,this._onHashChange(),this._setHashFragment(t),!0},s.prototype.clear=function(){return this.set("")},s.prototype.listen=function(){var t=arguments,n={};return e(t[0])?(n.regex=new RegExp(".*"),n.cb=t[0]):e(t[1])&&(n.regex=new RegExp("^"+t[0]+"$"),n.cb=t[1]),this.listeners.push(n),n},s.prototype.unlisten=function(t){var e=this.listeners.indexOf(t);return e>-1?(this.listeners.splice(e,1),!0):!1},s.prototype._getHashFragment=function(){return window.location.hash.replace(/^#?/,"")},s.prototype._setHashFragment=function(t){window.location.hash="#"+t},s.prototype._onHashChange=function(){var e=this.hash;t(this.listeners,function(t){(t.regex.test(e)||"default"===t.trigger)&&t.cb.call(window,e)})},s.prototype._sync=function(){var t=this._getHashFragment();this.hash!==t&&(this.hash=t,this._onHashChange())},n||(n=new s),n}()});